/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ForumImport } from './routes/_forum'
import { Route as authVerifyImport } from './routes/(auth)/verify'
import { Route as authSignupImport } from './routes/(auth)/signup'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as ForumForumIndexImport } from './routes/_forum/forum/index'
import { Route as ForumForumProfileAuthorIdImport } from './routes/_forum/forum/profile/$authorId'
import { Route as ForumForumPostsCreateImport } from './routes/_forum/forum/posts/create'
import { Route as ForumForumPostsPostIdImport } from './routes/_forum/forum/posts/$postId'
import { Route as ForumForumPostsPostIdEditImport } from './routes/_forum/forum/posts/$postId_.edit'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ForumRoute = ForumImport.update({
  id: '/_forum',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const authVerifyRoute = authVerifyImport.update({
  path: '/verify',
  getParentRoute: () => rootRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const ForumForumIndexRoute = ForumForumIndexImport.update({
  path: '/forum/',
  getParentRoute: () => ForumRoute,
} as any)

const ForumForumProfileAuthorIdRoute = ForumForumProfileAuthorIdImport.update({
  path: '/forum/profile/$authorId',
  getParentRoute: () => ForumRoute,
} as any)

const ForumForumPostsCreateRoute = ForumForumPostsCreateImport.update({
  path: '/forum/posts/create',
  getParentRoute: () => ForumRoute,
} as any)

const ForumForumPostsPostIdRoute = ForumForumPostsPostIdImport.update({
  path: '/forum/posts/$postId',
  getParentRoute: () => ForumRoute,
} as any)

const ForumForumPostsPostIdEditRoute = ForumForumPostsPostIdEditImport.update({
  path: '/forum/posts/$postId/edit',
  getParentRoute: () => ForumRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_forum': {
      preLoaderRoute: typeof ForumImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/verify': {
      preLoaderRoute: typeof authVerifyImport
      parentRoute: typeof rootRoute
    }
    '/_forum/forum/': {
      preLoaderRoute: typeof ForumForumIndexImport
      parentRoute: typeof ForumImport
    }
    '/_forum/forum/posts/$postId': {
      preLoaderRoute: typeof ForumForumPostsPostIdImport
      parentRoute: typeof ForumImport
    }
    '/_forum/forum/posts/create': {
      preLoaderRoute: typeof ForumForumPostsCreateImport
      parentRoute: typeof ForumImport
    }
    '/_forum/forum/profile/$authorId': {
      preLoaderRoute: typeof ForumForumProfileAuthorIdImport
      parentRoute: typeof ForumImport
    }
    '/_forum/forum/posts/$postId/edit': {
      preLoaderRoute: typeof ForumForumPostsPostIdEditImport
      parentRoute: typeof ForumImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  ForumRoute.addChildren([
    ForumForumIndexRoute,
    ForumForumPostsPostIdRoute,
    ForumForumPostsCreateRoute,
    ForumForumProfileAuthorIdRoute,
    ForumForumPostsPostIdEditRoute,
  ]),
  authForgotPasswordRoute,
  authLoginRoute,
  authSignupRoute,
  authVerifyRoute,
])

/* prettier-ignore-end */
